@inject IDialogService dialogs 

@for (int i = 1; i <= MaximumRating; i++)
{
    var starNumber = i;
    <span @onclick="@(() => OnStarClicked(starNumber))"
          @onmouseover="@(() => OnMouseOverStar(starNumber))"
          style="cursor: pointer;"
          class="fa fa-star @(SelectedRating >= i ? "checked" : null)">

    </span>
}

@code {
    [Parameter] public int MaximumRating { get; set; }
    [Parameter] public int SelectedRating { get; set; }
    [Parameter] public EventCallback<int> OnVote { get; set; }
    [CascadingParameter] public Task<AuthenticationState> AuthState { get; set; }

    bool voted = false;
    private async Task OnStarClicked(int starNumber)
    {
        var state = await AuthState;
        if (!state.User.Identity.IsAuthenticated)
        {
            await dialogs.ShowError("Please register in order to vote!");
            return;
        }

        SelectedRating = starNumber;
        voted = true;
        await OnVote.InvokeAsync(SelectedRating);
    }

    private void OnMouseOverStar(int starNumber)
    {
        if (!voted)
        {
            SelectedRating = starNumber;
        }
    }
}
