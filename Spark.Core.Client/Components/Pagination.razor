<h3>Pagination</h3>

<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        @foreach (var link in links)
        {
            <li @onclick="@(() => SelectedPageInternal(link))"
                style="cursor: pointer;"
                class="page-item @(link.Enabled ? null : "disabled") @(link.Active ? "active" : null)">
                <span class="page-link" href="#">@link.Text</span>
            </li>

        }
    </ul>
</nav>

@code {
    [Parameter] public int CurrentPage { get; set; } = 1;
    [Parameter] public int TotalPages { get; set; }
    [Parameter] public int Radius { get; set; } = 3;
    [Parameter] public EventCallback<int> OnPageSelected { get; set; }
    List<LinkModel> links;

    protected override void OnParametersSet()
    {
        LoadPages();
        base.OnParametersSet();
    }

    private void LoadPages()
    {
        links = new List<LinkModel>();

        var isPreviousEnabled = CurrentPage != 1;
        var previousPage = CurrentPage - 1;
        links.Add(new LinkModel(previousPage, isPreviousEnabled, "Previous"));

        for (int i = 1; i <= TotalPages; i++)
        {
            if (i >= CurrentPage - Radius
                && i <= CurrentPage + Radius)
            {
                links.Add(new LinkModel(i) { Active = CurrentPage == i });
            }
        }

        var isNextEnabled = CurrentPage != TotalPages;
        var nextPage = CurrentPage + 1;
        links.Add(new LinkModel(nextPage, isNextEnabled, "Next"));
    }

    private async Task SelectedPageInternal(LinkModel link)
    {
        if (link.Page == CurrentPage || !link.Enabled) return;
        CurrentPage = link.Page;
        await OnPageSelected.InvokeAsync(link.Page);
    }

    class LinkModel
    {
        public LinkModel(int page) : this(page, true) { }

        public LinkModel(int page, bool enabled)
            : this(page, enabled, page.ToString()) { }

        public LinkModel(int page, bool enabled, string text)
        {
            Page = page;
            Enabled = enabled;
            Text = text;
        }

        public string Text { get; set; }
        public int Page { get; set; }
        public bool Enabled { get; set; } = true;
        public bool Active { get; set; } = false;

    }
}
